<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Alex Sorokoletov Notes</title>
 <link href="https://sorokoletov.com/atom.xml" rel="self"/>
 <link href="https://sorokoletov.com/"/>
 <updated>2016-12-12T00:03:33-05:00</updated>
 <id>https://sorokoletov.com</id>
 <author>
   <name>Alex Sorokoletov</name>
   <email>alex@sorokoletov.com</email>
 </author>

 
 <entry>
   <title>Android Maps Utils for Xamarin updated with new features and NuGet</title>
   <link href="https://sorokoletov.com/2016/12/12/android-maps-utils-updated-published-nuget/"/>
   <updated>2016-12-12T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/12/12/android-maps-utils-updated-published-nuget</id>
   <content type="html">&lt;p&gt;I’ve updated Xamarin Android Maps Utils recently and now one can get this as a &lt;a href=&quot;https://www.nuget.org/packages/Xamarin.Android.Maps.Utils&quot;&gt;NuGet package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Install-Package Xamarin.Android.Maps.Utils -Pre&lt;/code&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Currently project has dependency on the latest and greatest Google Play Services package from Xamarin (32.961.0) and requires “TargetFramework” 7.0 (which should be by default for all new projects anyway).
Besides NuGet, project has now latest (0.4.4) java code inside bringing more new features for users.&lt;/p&gt;

&lt;p&gt;Now you get (shameless plug from original repo):&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Marker clustering — handles the display of a large number of points&lt;/p&gt;

  &lt;p&gt;Heat maps — display a large number of points as a heat map&lt;/p&gt;

  &lt;p&gt;IconGenerator — display text on your Markers&lt;/p&gt;

  &lt;p&gt;Poly decoding and encoding — compact encoding for paths, interoperability with Maps API web services&lt;/p&gt;

  &lt;p&gt;Spherical geometry — for example: computeDistance, computeHeading, computeArea&lt;/p&gt;

  &lt;p&gt;KML — displays KML data&lt;/p&gt;

  &lt;p&gt;GeoJSON — displays and styles GeoJSON data&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/googlemaps/android-maps-utils&quot;&gt;Google’s Github has a nice GIF demo of what Android Maps Utils can do now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Interestingly, I was not getting any notifications about activities on this project on Github, now it’s fixed. Thank you for the feedback and pull requests!&lt;/p&gt;

&lt;p&gt;Keep it coming!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Related links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/xamarin/GooglePlayServicesComponents#versioning&quot;&gt;Versioning of Xamarin.GooglePlayServices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Android.Maps.Utils&quot;&gt;Xamarin.Android.Maps.Utils on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/12/12/android-maps-utils-updated-published-nuget/&amp;amp;text=Android+Maps+Utils+for+Xamarin+updated+with+new+features+and+NuGet&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Easiest way to migrate from Xamarin.Insights to HockeyApp</title>
   <link href="https://sorokoletov.com/2016/12/11/migrating-from-xamarin-insights-to-hockeyapp-sdk/"/>
   <updated>2016-12-11T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/12/11/migrating-from-xamarin-insights-to-hockeyapp-sdk</id>
   <content type="html">&lt;p&gt;Xamarin.Insights was and still is a great exception tracking system for Xamarin applications. However&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;… Do also note that Xamarin Insights is now considered to be end of life: since the acquisition by Microsoft, Insights has been deprecated in favour of HockeyApp.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Many of us have apps integrated with Xamarin.Insights. Now it’s time to ditch Xamarin.Insights and put HockeyApp SDK instead.
HockeyApp has different integration points and API and some of the features from Insights are missing.&lt;/p&gt;

&lt;p&gt;What would be the easiest way to migrate from Xamarin Insights to HockeyApp?&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;meet-dtinsightstohockey&quot;&gt;Meet DT.InsightsToHockey&lt;/h3&gt;
&lt;p&gt;With this new project and NuGet package, all you have to do is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;to remove Xamarin.Insights package and reference&lt;/li&gt;
  &lt;li&gt;and  install DT.InsightsToHockey package.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, update the API key (change Insights’ one to HockeyApp app id) and you good to go.&lt;/p&gt;

&lt;p&gt;Quite simple, right?&lt;/p&gt;

&lt;p&gt;Here is how it looks in the project:&lt;/p&gt;

&lt;p&gt;Before:
&lt;img src=&quot;/assets/insights_to_hockeyapp_before.png&quot; alt=&quot;Xamarin Insights package in references before&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After:
&lt;img src=&quot;/assets/insights_to_hockeyapp_after.png&quot; alt=&quot;DT.InsightsToHockey package in references after&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Events already coming to HockeyApp after the changes:
&lt;img src=&quot;/assets/insights_to_hockeyapp_events.png&quot; alt=&quot;Events coming to HockeyApp after change&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works?&lt;/h3&gt;
&lt;p&gt;Under the hood, package exposes exactly same API under same namespace, reporting and integrating with HockeyApp instead.&lt;/p&gt;

&lt;p&gt;Literally, you have to change no code, just references.
Project supports PCL and iOS as of now, Android is in progress. I’ve tried to match all features available in Insights to HockeyApp SDK features. HockeyApp team was very helpful providing some feedback on features parity.&lt;/p&gt;

&lt;p&gt;I will be glad to receive any feedback and help with this project (Android and UWP are waiting!)&lt;/p&gt;

&lt;h4 id=&quot;additional-information&quot;&gt;Additional information&lt;/h4&gt;
&lt;p&gt;I recommended to take a look at features and limitations of HockeyApp SDK for each specific platform.&lt;/p&gt;

&lt;p&gt;HockeyApp is powerful and well-know metrics and crash tracking system. 
You can do in-app updates for iOS/Android, password-protected screens in the app (very well suited for diagnostics/admin screens). You can integrate a feedback page as well.&lt;/p&gt;

&lt;p&gt;This fall Azure integrated HockeyApp with Azure. Data coming to HockeyApp can be available in App Insights for analysis and intelligence.
It is very powerful way to see and analyze events coming from your app. &lt;a href=&quot;https://azure.microsoft.com/en-us/blog/access-hockeyapp-data-in-ai-with-hockeyapp-bridge-app/&quot;&gt;Step by step guidance from AppInsights team.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading. Please let me know your thoughts on the subject.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Related links:&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/alexsorokoletov/DT.XamarinInsightsToHockeyApp&quot;&gt;DT.InsightsToHockey on Github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bitstadium/HockeySDK-Xamarin&quot;&gt;HockeyApp SDK for Xamarin&lt;/a&gt; and for &lt;a href=&quot;https://github.com/bitstadium/HockeySDK-iOS&quot;&gt;iOS&lt;/a&gt; and &lt;a href=&quot;https://github.com/bitstadium/HockeySDK-Android&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.xamarin.com/guides/insights/&quot;&gt;Xamarin.Insights Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.xamarin.com/faq#qha1&quot;&gt;What is happening with Xamarin.Insights&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/access-hockeyapp-data-in-ai-with-hockeyapp-bridge-app/&quot;&gt;Exploring HockeyApp data in Application Insights: introducing the Bridge App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hockeyapp.net/blog/2016/08/30/custom-events-public-preview.html&quot;&gt;Custom events for everybody&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/12/11/migrating-from-xamarin-insights-to-hockeyapp-sdk/&amp;amp;text=Easiest+way+to+migrate+from+Xamarin.Insights+to+HockeyApp&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Named parameters in Func<T>/Action<T> type in C#?</title>
   <link href="https://sorokoletov.com/2016/11/29/naming-func-action-of-t-arguments/"/>
   <updated>2016-11-29T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/11/29/naming-func-action-of-t-arguments</id>
   <content type="html">&lt;p&gt;If you ever wondered, why Visual Studio (and Visual Studio for Mac) suggest you to name your lambda arguments with names like arg1, arg2 … argN and so on…&lt;/p&gt;

&lt;p&gt;Here is a common situation where somewhere in your library or helper class you have a method taking in &lt;code&gt;Func&amp;lt;T&amp;gt;&lt;/code&gt; or &lt;code&gt;Action&amp;lt;T&amp;gt;&lt;/code&gt;.
&lt;img src=&quot;/assets/naming_func_of_t_declaration.png&quot; alt=&quot;Definition of your method using Func/Action classes&quot; /&gt;
and then when you want to use this method VS suggests you following names: arg1 and arg2.
Like there is nothing better than that :)
&lt;img src=&quot;/assets/naming_func_of_t_default_behavior.png&quot; alt=&quot;Definition of your method using Func/Action classes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a cheap and easy &lt;strong&gt;solution for that&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Define your own delegate with same signature as &lt;code&gt;Func&amp;lt;T&amp;gt;&lt;/code&gt; or &lt;code&gt;Func&amp;lt;T1,T2,T3&amp;gt;&lt;/code&gt; you are using already.&lt;/li&gt;
  &lt;li&gt;Specify intended names for these arguments (in my case arg1 could be better described as service, where arg2 is actually a token).&lt;/li&gt;
  &lt;li&gt;In original method, replace Func&lt;t&gt; with this new delegate.&lt;/t&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/naming_func_of_t_custom_named_delegate.png&quot; alt=&quot;Defining custom delegate with correct names and using it in the original method&quot; /&gt;
After these changes when you are going to use the method, you will see intellisense suggesting correct names and not generic ones.
&lt;img src=&quot;/assets/naming_func_of_t_improved_names.png&quot; alt=&quot;Now you get better names from VS as a suggestion&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;pros-and-cons&quot;&gt;Pros and Cons&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You, your team and other people using the API that you expose (whether internally in the app or in the library or NuGet) will see better names and probably will use these names.&lt;/li&gt;
  &lt;li&gt;So code will be easier to read and maintain.&lt;/li&gt;
  &lt;li&gt;If you decide to extend the delegate, you will have to do it in one place only.&lt;/li&gt;
  &lt;li&gt;It’s fun to have smart code suggestions!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bit of extra work and extra code&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;bonus&quot;&gt;Bonus&lt;/h4&gt;
&lt;p&gt;You can have optional &lt;code&gt;Func&amp;lt;T&amp;gt;&lt;/code&gt; arguments!
In the example below you can omit &lt;code&gt;token&lt;/code&gt; argument completely.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/naming_func_t_bonus.png&quot; alt=&quot;Optional arguments in Func of T csharp&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/11/29/naming-func-action-of-t-arguments/&amp;amp;text=Named+parameters+in+Func%3CT%3E%2FAction%3CT%3E+type+in+C%23%3F&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>.editorconfig support in Visual Studio 2017</title>
   <link href="https://sorokoletov.com/2016/11/28/editorconfig-in-visualstudio/"/>
   <updated>2016-11-28T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/11/28/editorconfig-in-visualstudio</id>
   <content type="html">&lt;p&gt;Just recently, Visual Studio team published a post on &lt;a href=&quot;https://blogs.msdn.microsoft.com/visualstudio/2016/11/28/productivity-in-visual-studio-2017-rc/&quot;&gt;great features coming to the VS 2017 that will increase your productivity&lt;/a&gt;. Among those, one small but powerful feature coming to the Visual Studio.&lt;/p&gt;

&lt;p&gt;It’s .editorconfig support.
What’s so great about this?
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;EditorConfig support is a good first step to support all platforms and editors of choice uniformely. Working with Xamarin apps from Windows and OS X in distributed teams, I learned hard way how tabs (gosh, again?) could be disruptive to smooth team work.&lt;/p&gt;

&lt;h4 id=&quot;what-is-editorconfig&quot;&gt;What is EditorConfig?&lt;/h4&gt;
&lt;p&gt;Quote from &lt;a href=&quot;http://editorconfig.org/&quot;&gt;EditorConfig website&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, having .editorconfig in the root of your project will guarantee that any editor supporting it will comply with defined settings and will keep your codebase in the same format as team agreed.&lt;/p&gt;

&lt;h4 id=&quot;what-can-we-config-in-the-editor-then&quot;&gt;What can we config in the editor then?&lt;/h4&gt;
&lt;p&gt;EditorConfig in VS 2017 supports following settings:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;indent_style&lt;/li&gt;
  &lt;li&gt;indent_size&lt;/li&gt;
  &lt;li&gt;tab_width&lt;/li&gt;
  &lt;li&gt;end_of_line&lt;/li&gt;
  &lt;li&gt;charset&lt;/li&gt;
  &lt;li&gt;trim_trailing_whitespace&lt;/li&gt;
  &lt;li&gt;insert_final_newline&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/visualstudio/ide/create-portable-custom-editor-options&quot;&gt;Overview how to setup .editorconfig&lt;/a&gt; is available in the Microsoft Docs.&lt;/p&gt;

&lt;p&gt;I will quote one paragraph from the docs since it’s very well written:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;… EditorConfig files enable you to maintain consistent coding styles and settings for a language … in a codebase regardless of the editor or IDE you use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;EditorConfig doesn’t support full set of C# formatting rules, so it’s not a replacement for formatting settings in VS or code formatting policy in Xamarin Studio (XS stores settings in a .sln file).&lt;/p&gt;

&lt;p&gt;I am sure we will see more tools/features coming to support different editors and environments to keep consistent coding styles.&lt;/p&gt;

&lt;p&gt;If you are interested in the topic, please read my recent article on having &lt;a href=&quot;.2016/11/13/csharp-standard-style/&quot;&gt;standard C# formatting style&lt;/a&gt; and feel free to share your opinion.&lt;/p&gt;

&lt;h5 id=&quot;additional-reading&quot;&gt;Additional reading&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;http://editorconfig.org/#download&quot;&gt;EditorConfig.org plugins for IDE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/visualstudio/2016/11/16/visual-studio-2017-rc/&quot;&gt;Overview of VS 2017 Release Candidate&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/11/28/editorconfig-in-visualstudio/&amp;amp;text=.editorconfig+support+in+Visual+Studio+2017&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>C# Standard Style - single source of formatting truth</title>
   <link href="https://sorokoletov.com/2016/11/13/csharp-standard-style/"/>
   <updated>2016-11-13T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/11/13/csharp-standard-style</id>
   <content type="html">&lt;p&gt;Months ago &lt;a href=&quot;https://www.paralect.com/team&quot;&gt;Andrew Orsich&lt;/a&gt; told me about this great tool called &lt;a href=&quot;http://standardjs.com/&quot;&gt;javascript standard style&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Absolutely amazing.&lt;/p&gt;

&lt;p&gt;What it does is just formats code with one pre-configured, non-changeable, non-customizeable, non-arguable style. &lt;strong&gt;You either use it or not&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After that, all discussions about curly braces, tabs and spaces go to void. Done.&lt;/p&gt;

&lt;p&gt;I’d like to have this for C#.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;We all had enough of discussions whether use tabs or spaces (it’s still happens), where to put braces, how do we name methods and variables. I feel this is especially important now, when .NET is opensource, when C# is being used for iOS and Android development, when many of C# developers are working on Mac and Linux.&lt;/p&gt;

&lt;p&gt;Frankly, we are all already using &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ff926074.aspx&quot;&gt;Microsoft C# Coding Conventions&lt;/a&gt; in some way. It’s just these slight modifications that make us spend time on formatting and arguing about these changes or undoing them.&lt;/p&gt;

&lt;p&gt;I want my team and everyone developing in C# focus on functionality and forget about formatting forever.&lt;/p&gt;

&lt;p&gt;Let’s make it happen.&lt;/p&gt;

&lt;h2 id=&quot;there-should-be-something-for-this-right&quot;&gt;There should be something for this, right?&lt;/h2&gt;

&lt;p&gt;Tools already exist, however…&lt;/p&gt;

&lt;p&gt;One can use Visual Studio settings and configure C# formatting. Then do the same with Xamarin Studio.(strictly speaking, having XS format C# code exactly same way as VS is not possible). 
And what about VS Code?&lt;/p&gt;

&lt;p&gt;There is an &lt;a href=&quot;https://github.com/editorconfig/editorconfig-vscode&quot;&gt;.editorconfig support for Visual Studio&lt;/a&gt; but it’s covering just part of formatting questions.&lt;/p&gt;

&lt;p&gt;ReSharper is another candidate, however, it doesn’t work with Xamarin Studio and you can customize rules.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/onovotny&quot;&gt;Oren&lt;/a&gt; kindly pointed there is a &lt;a href=&quot;https://github.com/dotnet/codeformatter&quot;&gt;dotnet/CodeFormatter project&lt;/a&gt; and &lt;a href=&quot;https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/contributing.md&quot;&gt;Roslyn and .NET Core teams use styles&lt;/a&gt; enforced by the tool.&lt;/p&gt;

&lt;p&gt;Good old StyleCop/FxCop might be suitable as well, but again, you can and have to customize it.&lt;/p&gt;

&lt;p&gt;Unfortunately, all available tools are customizable. As long as you use them, there will be always someone who will do something his way.  Again, I want to have this binary and simple choice. Use it or don’t use it.&lt;/p&gt;

&lt;h2 id=&quot;should-we-build-another-tool&quot;&gt;Should we build another tool?&lt;/h2&gt;

&lt;p&gt;Actually, CodeFormatter is a good candidate for becoming a single source of truth. It has default rules baked in, it runs on Windows and Mono and it’s built with Roslyn and people are already using it. Here is a &lt;a href=&quot;https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/coding-style.md&quot;&gt;list of rules CodeFormatter enforces&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I feel like we just need to extend it and build VS extension, Xamarin Add-in and VS Code extension to make experience seamless.&lt;/p&gt;

&lt;h2 id=&quot;its-just-your-crazy-idea&quot;&gt;It’s just your crazy idea&lt;/h2&gt;

&lt;p&gt;According to the post from Roslyn team, I’m not alone&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/dotnet/2015/02/09/automatic-code-formatter-released-to-github/&quot;&gt;Automatic code formatter released to GitHub&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We strongly believe that having a consistent style greatly increases the readability and maintainability of a code base. The individual style decisions themselves are subjective, the key is the consistency of the decisions. As such the .NET team has a set of style guidelines for all C# code written by the team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;i-have-another-ideaopinion&quot;&gt;I have another idea/opinion&lt;/h2&gt;

&lt;p&gt;I would love to hear your feedback and thoughs on this idea. Feel free to contact me or comment this article and please share it with your team and friends.&lt;/p&gt;

&lt;h2 id=&quot;qa&quot;&gt;Q&amp;amp;A&lt;/h2&gt;

&lt;h4 id=&quot;i-do-not-want-to-re-format-my-solution&quot;&gt;I do not want to re-format my solution.&lt;/h4&gt;
&lt;p&gt;You don’t need to re-format existing codebase unless you want. When you start your next project, this is the best time to start using C# Standard Format.&lt;/p&gt;

&lt;h4 id=&quot;why-we-should-enforce-style-a-and-not-enforce-style-b&quot;&gt;Why we should enforce style A and not enforce style B.&lt;/h4&gt;

&lt;p&gt;Discussing specific style settings is not the goal of this post.&lt;/p&gt;

&lt;h4 id=&quot;i-will-not-use-this-c-standard-formatting&quot;&gt;I will not use this C# standard formatting.&lt;/h4&gt;

&lt;p&gt;Fine, it’s “use it or don’t”. Nothing will change for people that don’t want to use a non-customizeable set of rules. A lot of free time will come to those that want to use it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/11/13/csharp-standard-style/&amp;amp;text=C%23+Standard+Style+-+single+source+of+formatting+truth&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MaterialDateTimePicker bindings for Xamarin.Android apps</title>
   <link href="https://sorokoletov.com/2016/02/29/material-date-time-picker-available-for-xamarin-android-apps-bindings/"/>
   <updated>2016-02-29T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/02/29/material-date-time-picker-available-for-xamarin-android-apps-bindings</id>
   <content type="html">&lt;h3 id=&quot;bindings-for-materialdatetimepicker-for-xamarinandroid-apps&quot;&gt;Bindings for MaterialDateTimePicker for Xamarin.Android apps&lt;/h3&gt;

&lt;p&gt;One of the good libraries for Android apps made in Material design is the &lt;a href=&quot;https://github.com/wdullaer/MaterialDateTimePicker&quot;&gt;“Material DateTime Picker”&lt;/a&gt; from &lt;a href=&quot;https://github.com/wdullaer&quot;&gt;@wdullaer&lt;/a&gt;.
Here is a short article how to create Xamarin.Android bindings library to consume that awesome picker in your Xamarin.Android applications.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;TLDR:  &lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Wdullaer.MaterialDateTimePicker&quot;&gt;https://github.com/alexsorokoletov/Xamarin.Wdullaer.MaterialDateTimePicker&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-java-library-bindings-for-xamarinandroid&quot;&gt;Creating java library bindings for Xamarin.Android&lt;/h3&gt;

&lt;p&gt;There is an official guide from Xamarin: 
&lt;a href=&quot;https://developer.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding-a-java-library/&quot;&gt;Binding a Java Library - Consuming Java libraries from C#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we need to get the JAR/AAR file.
Looking at &lt;a href=&quot;https://github.com/wdullaer/MaterialDateTimePicker&quot;&gt;github page&lt;/a&gt;, we can see Maven banner. It means that we can grab a binary from Maven so let’s go there and do it:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://repo1.maven.org/maven2/com/wdullaer/materialdatetimepicker/2.2.0/&quot;&gt;https://repo1.maven.org/maven2/com/wdullaer/materialdatetimepicker/2.2.0/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, following the Xamarin guide, we will see 3 errors:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Vendor/MaterialDateTimePickerBinding/obj/Debug/generated/src/Com.Wdullaer.Materialdatetimepicker.Date.MonthView.cs(34,34): 
  Error CS0533: `Com.Wdullaer.Materialdatetimepicker.Date.MonthView.MonthViewTouchHelper.GetVisibleVirtualViews(System.Collections.Generic.IList&amp;lt;Java.Lang.Integer&amp;gt;)&#39; 
  hides inherited abstract member `Android.Support.V4.Widget.ExploreByTouchHelper.GetVisibleVirtualViews(System.Collections.Generic.IList&amp;lt;Java.Lang.Integer&amp;gt;)&#39;
  (CS0533) (MaterialDateTimePickerBinding)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
 Vendor/MaterialDateTimePickerBinding/obj/Debug/generated/src/Com.Wdullaer.Materialdatetimepicker.Date.MonthView.cs(36,36): Error CS0534: `Com.Wdullaer.Materialdatetimepicker.Date.MonthView.MonthViewTouchHelper&#39; does not implement inherited abstract member `Android.Support.V4.Widget.ExploreByTouchHelper.GetVisibleVirtualViews(System.Collections.Generic.IList&amp;lt;Java.Lang.Integer&amp;gt;)&#39; (CS0534) (MaterialDateTimePickerBinding)
&lt;/code&gt;
 and&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
 Vendor/MaterialDateTimePickerBinding/obj/Debug/generated/src/Com.Wdullaer.Materialdatetimepicker.Time.Timepoint.cs(23,23): Error CS0535: `Com.Wdullaer.Materialdatetimepicker.Time.Timepoint&#39; does not implement interface member `Java.Lang.IComparable.CompareTo(Java.Lang.Object)&#39; (CS0535) (MaterialDateTimePickerBinding)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;1st and 2nd are pretty simple. As these methods most definitely will not be consumed from C# side, we can just remove these methods from bindings.&lt;/p&gt;

&lt;p&gt;For that we use &lt;code&gt;&amp;lt;remove-node /&amp;gt;&lt;/code&gt; instruction in Metadata.xml.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;remove-node&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/api/package[@name=&amp;#39;com.wdullaer.materialdatetimepicker.date&amp;#39;]/class[@name=&amp;#39;MonthView.MonthViewTouchHelper&amp;#39;]/method[@name=&amp;#39;getVisibleVirtualViews&amp;#39; and count(parameter)=1 and parameter[1][@type=&amp;#39;java.util.List&amp;amp;lt;java.lang.Integer&amp;amp;gt;&amp;#39;]]&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;remove-node&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/api/package[@name=&amp;#39;com.wdullaer.materialdatetimepicker.date&amp;#39;]/class[@name=&amp;#39;MonthView.MonthViewTouchHelper&amp;#39;]&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To solve 3rd problem we need to add a partial class to Additions folder:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Com.Wdullaer.Materialdatetimepicker.Time&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * add partial class due to Java generics and IComparable interface in Xamarin.Android&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * Vendor/MaterialDateTimePickerBinding/obj/Debug/generated/src/Com.Wdullaer.Materialdatetimepicker.Time.Timepoint.cs(23,23): Error CS0535: &amp;#39;Com.Wdullaer.Materialdatetimepicker.Time.Timepoint&amp;#39; does not implement interface member &amp;#39;Java.Lang.IComparable.CompareTo(Java.Lang.Object)&amp;#39; (CS0535) (MaterialDateTimePickerBinding)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * https://forums.xamarin.com/discussion/1950/binding-jar-file-with-class-that-implements-java-lang-icomparable&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;partial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Timepoint&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IComparable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CompareTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CompareTo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Timepoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Solution to this issue I found on &lt;a href=&quot;https://forums.xamarin.com/discussion/38247/binding-issue-with-android-support-v4-widget-explorebytouchhelper-getvisiblevirtualviews&quot;&gt;Xamarin Forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As usual, very helpful were comments and examples from &lt;a href=&quot;https://github.com/brendanzagaeski&quot;&gt;brendanzagaeski&lt;/a&gt; with different approaches to different java-to-csharp binding problems. Links to these examples are in the end of the page.&lt;/p&gt;

&lt;h3 id=&quot;jaraar-dependencies&quot;&gt;JAR/AAR dependencies&lt;/h3&gt;
&lt;p&gt;This library we are binding now has only one dependency:
&lt;a href=&quot;https://github.com/wdullaer/MaterialDateTimePicker/blob/master/library/build.gradle#L23&quot;&gt;https://github.com/wdullaer/MaterialDateTimePicker/blob/master/library/build.gradle#L23&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a &lt;code&gt;com.android.support:support-v4:23.1.1&lt;/code&gt; which translates to Xamarin Nuget package called Xamarin.Android.Support.v4 of version 23.1.1.&lt;/p&gt;

&lt;p&gt;So we will just add this Nuget package to our bindings project and that’s it.
Clean and Build the project and you should see 0 errors.
Yaay!&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-this-library-examples&quot;&gt;How to use this library (examples)&lt;/h3&gt;

&lt;p&gt;On C# side what you need to do is following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;reference the bindings project in your app project&lt;/li&gt;
  &lt;li&gt;in your activity implement interface OnTimeSetListener/OnDateSetListener&lt;/li&gt;
  &lt;li&gt;create a datepicker and show it&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These steps are described in the &lt;a href=&quot;https://github.com/wdullaer/MaterialDateTimePicker/blob/master/README.md&quot;&gt;Readme.md file of the original library&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//implement OnDateSetListener&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HomeView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseActionBarView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HomeViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;,&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wdullaer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Materialdatetimepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOnDateSetListener&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnChooseDateButtonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Calendar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wdullaer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Materialdatetimepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dpd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wdullaer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Materialdatetimepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CalendarField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CalendarField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CalendarField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DayOfMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FragmentManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Datepickerdialog&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnDateSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wdullaer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Materialdatetimepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DatePickerDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dismiss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure you are using the same version of Xamarin.Android.Support.v4 package in your application project.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/material-date-time-picker-xamarin-android.png&quot; alt=&quot;Material Date Time Picker in Xamarin.Android app&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;source-code&quot;&gt;Source code&lt;/h3&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Wdullaer.MaterialDateTimePicker&quot;&gt;Xamarin.Wdullaer.MaterialDateTimePicker&lt;/a&gt; github repository. 
Clone it and use it or just add as a submodule.&lt;/p&gt;

&lt;h3 id=&quot;improving-further&quot;&gt;Improving further&lt;/h3&gt;

&lt;p&gt;One thing definitely open for improvement is parameter names. Right now in many places it’s just p0, p1, p2, p3.&lt;/p&gt;

&lt;p&gt;Naming them hour, minute, second, isAmPm would make code cleaner and easier to understand.&lt;/p&gt;

&lt;p&gt;So if you feel like fixing something feel free to submit pull request. (Or if you know how to fix these names automaticall - let me know, please).&lt;/p&gt;

&lt;h3 id=&quot;helpful-links&quot;&gt;Helpful links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;My other Xamarin.Android bindings:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://dreamteam-mobile.com/blog/2015/04/tutorial-android-float-label-binding-for-xamarin-android/&quot;&gt;Tutorial – Android float label binding for Xamarin.Android&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://sorokoletov.com/2015/12/28/android-maps-utils-available-for-xamarin-android-apps-bindings/&quot;&gt;Tutorial – Android-maps-utils bindings for Xamarin.Android apps&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;brendanzagaeski Metadata.xml examples:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://gist.github.com/brendanzagaeski/c32d65c21e152799af69&quot;&gt;https://gist.github.com/brendanzagaeski/c32d65c21e152799af69&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/6d1052a8b76f9067548e&quot;&gt;https://gist.github.com/brendanzagaeski/6d1052a8b76f9067548e&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/69f490e31ca6a71136ff&quot;&gt;https://gist.github.com/brendanzagaeski/69f490e31ca6a71136ff&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/3868e30b85a1feb1181b&quot;&gt;https://gist.github.com/brendanzagaeski/3868e30b85a1feb1181b&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/9834034&quot;&gt;https://gist.github.com/brendanzagaeski/9834034&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/9607158&quot;&gt;https://gist.github.com/brendanzagaeski/9607158&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/02/29/material-date-time-picker-available-for-xamarin-android-apps-bindings/&amp;amp;text=MaterialDateTimePicker+bindings+for+Xamarin.Android+apps&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>gMaps for Windows Phone got 100k reviews!</title>
   <link href="https://sorokoletov.com/2016/02/22/gmaps-got-100000-reviews-in-store/"/>
   <updated>2016-02-22T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/02/22/gmaps-got-100000-reviews-in-store</id>
   <content type="html">&lt;p&gt;Monitoring app reviews with Reviews Reader app &lt;a href=&quot;http://twitter.com/winreviews&quot;&gt;@winreviews&lt;/a&gt;, I finally noticed gMaps got 100k of reviews!&lt;/p&gt;

&lt;p&gt;Thank you, users! We are reading all of them, believe it or not!
&lt;!--more--&gt;
&lt;img src=&quot;/assets/gmaps-got-100k-reviews.png&quot; alt=&quot;gMaps is top free navigation app for Windows Phone&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have any ideas how to make the app better, or any other feedback, feel free to contact us using &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#103;&amp;#109;&amp;#097;&amp;#112;&amp;#115;&amp;#046;&amp;#102;&amp;#101;&amp;#101;&amp;#100;&amp;#098;&amp;#097;&amp;#099;&amp;#107;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;gmaps feedback email&lt;/a&gt;
 address or &lt;a href=&quot;https://gmaps.uservoice.com/&quot;&gt;gMaps uservoice&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/02/22/gmaps-got-100000-reviews-in-store/&amp;amp;text=gMaps+for+Windows+Phone+got+100k+reviews%21&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Coding for fun - AT&T signal levels on route from DC to Snowshoe, WV</title>
   <link href="https://sorokoletov.com/2016/01/05/coding-for-fun-att-signal-strength-dc-to-snowshoe-ios/"/>
   <updated>2016-01-05T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2016/01/05/coding-for-fun-att-signal-strength-dc-to-snowshoe-ios</id>
   <content type="html">&lt;p&gt;We go the &lt;a href=&quot;http://snowshoemtn.com&quot;&gt;Snowshoe ski resort&lt;/a&gt; almost every weekend when there is snow.
Driving there takes up to 5 hours.
As long as you drive off the interstate you loose your cell signal.&lt;/p&gt;

&lt;p&gt;Last year we had to learn how to drive and communicate in a disconnected world. We now know the route by heart, we know stops, we know which restaurants or gas stations have Wi-Fi. We also got some low-power FRS radios to have more flexibility during our trips.&lt;/p&gt;

&lt;p&gt;Honestly, I was always wondering why T-Mobile was so bad in this area. This spring I switched to AT&amp;amp;T to compare the coverage on Outer Banks (where T-Mobile is also failing to get you even basic coverage).
Now it`s winter and it’s time to check out AT&amp;amp;T coverage in our favorite skiing area.&lt;/p&gt;

&lt;p&gt;Let’s see how we do that and what we find
&lt;!--more--&gt;&lt;/p&gt;

&lt;h3 id=&quot;why&quot;&gt;Why&lt;/h3&gt;
&lt;p&gt;As the article says, point is get some code just for fun. And see, if switching from T-Mobile to AT&amp;amp;T makes any sense.
And see, maybe there is a reason why we have almost no coverage off the interstates.&lt;/p&gt;

&lt;h3 id=&quot;technical-details&quot;&gt;Technical details&lt;/h3&gt;
&lt;p&gt;So, I had macbook with OS X and Windows 10, iPhone 6 and Lumia 950 and Lumia 925. First idea was to have Lumia 950 with AT&amp;amp;T and Lumia 925 with T-Mobile run same app along the route and then compare results. Unfortunately, I forgot my USB C cable so 950 died on the way there. 
So plan changed and I got an iOS app and did a AT&amp;amp;T cellular network signal level log on the way back.&lt;/p&gt;

&lt;p&gt;Interesting that iOS has no public API to get cellular service signal level. There was some way in iOS 4.2 days &lt;a href=&quot;https://github.com/valexa/VAFieldTest&quot;&gt;VAFieldTest&lt;/a&gt;. Doesn’t work now.
However, there is a way to get a signal level on iOS 9 devices. Kind gentleman shared the idea on Stack Overflow: &lt;a href=&quot;http://stackoverflow.com/a/34389611/883738&quot;&gt;Measuring cellular signal strength&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That was enough for the first version.&lt;/p&gt;

&lt;p&gt;You can get the app from github - &lt;a href=&quot;https://github.com/alexsorokoletov/SignalLogger&quot;&gt;github.com/alexsorokoletov/SignalLogger&lt;/a&gt;. App tracks GPS and signal level every 10 seconds, while tracking screen stays active, all results are exported to CSV and emailed to you after you stop tracking. Keep it simple.&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;
&lt;p&gt;Gist with raw CSV data: &lt;a href=&quot;https://gist.github.com/alexsorokoletov/0ce68926804dee671563&quot;&gt;DC to Snowshoe ATT signal strength data.csv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using QGIS I was able to get the results on the map:&lt;/p&gt;

&lt;p&gt;This is a complete route from DC to Snowshoe, WV with AT&amp;amp;T signal level. Green - available, red - unavailable.
I have no idea yet how to make the route colorful with orange where the signal is low and green where it is good.
&lt;img src=&quot;/assets/dc-snowshoe-att-signal-level-complete.png&quot; alt=&quot;Complete route from DC to Snowshoe, WV with AT&amp;amp;T signal level&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Part of the route where the service is available.
&lt;img src=&quot;/assets/dc-snowshoe-att-signal-level-available.png&quot; alt=&quot;Route from DC to Snowshoe, WV where AT&amp;amp;T is available&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Part of the route where the service is &lt;strong&gt;not&lt;/strong&gt; available.
&lt;img src=&quot;/assets/dc-snowshoe-att-signal-level-unavailable.png&quot; alt=&quot;Route from DC to Snowshoe, WV without AT&amp;amp;T service&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And also a terrain based part of the map where the AT&amp;amp;T service is interrupted.
&lt;img src=&quot;/assets/dc-snowshoe-att-signal-level-terrain.png&quot; alt=&quot;AT&amp;amp;T service with terrain map as a base&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looks like the rule for the AT&amp;amp;T service is simple. Inside park areas (forests, national and state parks - green on the terrain map) service is absent. Otherwise AT&amp;amp;T gives some coverage.&lt;/p&gt;

&lt;p&gt;I was surprised to find out that the coverage is not actually related to &lt;a href=&quot;https://en.wikipedia.org/wiki/United_States_National_Radio_Quiet_Zone&quot;&gt;the US NRQZ area&lt;/a&gt; or distance to &lt;a href=&quot;https://en.wikipedia.org/wiki/Green_Bank_Telescope&quot;&gt;the Green Bank Radio Observatory&lt;/a&gt;. 
One can get some details about that in the NPR article &lt;a href=&quot;http://www.npr.org/sections/alltechconsidered/2013/10/08/218976699/enter-the-quiet-zone-where-cell-service-wi-fi-are-banned&quot;&gt;Enter The Quiet Zone: Where Cell Service, Wi-Fi Are Banned&lt;/a&gt;
### Next steps
Next time we go to the Snowshoe resort, I’m going to get T-Mobile coverage results and then compare and see if it makes sense to have one or another.&lt;/p&gt;

&lt;h3 id=&quot;thoughts&quot;&gt;Thoughts&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What is wrong with Apple not providing API for cellular service signal strength?&lt;/p&gt;

    &lt;p&gt;I guess it would benefit if Apple would be more open in terms of APIs available.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There are interesting ways of getting data through private Apple APIs and from private UIView classes &lt;a href=&quot;stackoverflow.com/questions/754824/get-an-object-properties-list-in-objective-c&quot;&gt;Get an object properties list in Objective-C&lt;/a&gt; and &lt;a href=&quot;https://github.com/valexa/VAFieldTest/blob/master/CoreTelephony.txt&quot;&gt;CoreTelephony.h file&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;These ways will stop your app from being published in the App Store, but for experiments like this are good alternative.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let’s see if Microsoft is more open with cellular&lt;/p&gt;

    &lt;p&gt;Probably, there are different ways to access this data just because MS had different API sets for WP7, WP8, WinRT (WPA81) and Windows 10 UWP. Let’s see who is the winner.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I want to render same data in the Microsoft Power BI. Presumably, this is the kind of tasks to be handled by the Power BI.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2016/01/05/coding-for-fun-att-signal-strength-dc-to-snowshoe-ios/&amp;amp;text=Coding+for+fun+-+AT%26T+signal+levels+on+route+from+DC+to+Snowshoe%2C+WV&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android-maps-utils bindings for Xamarin.Android apps</title>
   <link href="https://sorokoletov.com/2015/12/28/android-maps-utils-available-for-xamarin-android-apps-bindings/"/>
   <updated>2015-12-28T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2015/12/28/android-maps-utils-available-for-xamarin-android-apps-bindings</id>
   <content type="html">&lt;h3 id=&quot;bindings-for-android-maps-utils-for-xamarinandroid-apps&quot;&gt;Bindings for android-maps-utils for Xamarin.Android apps&lt;/h3&gt;

&lt;p&gt;Many developers use Google Maps for Android (Google Play Services) to display maps and related content in Xamarin-based Android apps.&lt;/p&gt;

&lt;p&gt;Javascript SDK for Google Maps has clustering and other neat stuff built in. Android Maps SDK has none of this included. 
However, there is a solution!&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;To address this problem, Google Maps team shared so called &lt;code&gt;android-maps-utils&lt;/code&gt; extensions to the Android maps SDK which allows you do following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Marker clustering — handles the display of a large number of points&lt;/li&gt;
  &lt;li&gt;Heat maps — display a large number of points as a heat map&lt;/li&gt;
  &lt;li&gt;IconGenerator — display text on your Markers (see screenshot to the right)&lt;/li&gt;
  &lt;li&gt;Poly decoding and encoding — compact encoding for paths, interoperability with Maps API web services&lt;/li&gt;
  &lt;li&gt;Spherical geometry — for example: computeDistance, computeHeading, computeArea&lt;/li&gt;
  &lt;li&gt;KML — displays KML data (Caution: Beta!)&lt;/li&gt;
  &lt;li&gt;GeoJSON — displays and styles GeoJSON data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Please read more on the official website: &lt;a href=&quot;http://googlemaps.github.io/android-maps-utils/&quot;&gt;http://googlemaps.github.io/android-maps-utils/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Down the road you can find steps and details how the bindings for quite complex java library could be created and how these fresh bindings for Android Maps utils could be consumed in the Xamarin Android application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To get to the how to part, scroll down&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;existing-xamarinandroid-bindings&quot;&gt;Existing Xamarin.Android bindings&lt;/h3&gt;
&lt;p&gt;Particularly I was interesting about clustering, as the application has to display around 500 markers in a dense area.&lt;/p&gt;

&lt;p&gt;Looking for existing solution to the problem, one can find &lt;a href=&quot;https://github.com/oystehei/MapsUtilityDemo&quot;&gt;bindings made by Øystein Heimark&lt;/a&gt;. But these are quite old. To practice and to get the freshest code, I’ve created the updated bindings:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Android.Maps.Utils&quot;&gt;github.com/alexsorokoletov/Xamarin.Android.Maps.Utils&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;creating-java-library-bindings-for-xamarinandroid&quot;&gt;Creating java library bindings for Xamarin.Android&lt;/h3&gt;

&lt;p&gt;There is an official guide from Xamarin: 
&lt;a href=&quot;https://developer.xamarin.com/guides/android/advanced_topics/java_integration_overview/binding-a-java-library/&quot;&gt;Binding a Java Library - Consuming Java libraries from C#&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following the guide, one can sometimes see warnings or erros on the bindings.
For example, 
&lt;code&gt;/GoogleMapsUtilityBinding/obj/Debug/generated/src/Com.Google.Maps.Android.Geojson.GeoJsonLineStringStyle.cs(118,118): Error CS0234: The type or namespace name &#39;IGeoJsonStyle&#39; does not exist in the namespace &#39;Com.Google.Maps.Android.Geojson&#39;. Are you missing an assembly reference? (CS0234) (GoogleMapsUtilityBinding)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To fix this error all you need is to manually &lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Android.Maps.Utils/blob/master/Transforms/Metadata.xml#L15&quot;&gt;edit Metadata.xml file and introduce these changes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you proceed, there will be a few more errors and several warnings. Fixes for them are documented in the &lt;a href=&quot;https://github.com/alexsorokoletov/Xamarin.Android.Maps.Utils/blob/master/Transforms/Metadata.xml&quot;&gt;Metadata.xml file&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More than helpful were comments and examples from &lt;a href=&quot;https://github.com/brendanzagaeski&quot;&gt;brendanzagaeski&lt;/a&gt; with different approaches to different java-to-csharp binding problems. Links to these examples are in the end of the page.&lt;/p&gt;

&lt;h3 id=&quot;jaraar-dependencies&quot;&gt;JAR/AAR dependencies&lt;/h3&gt;
&lt;p&gt;Case with &lt;code&gt;android-maps-utils&lt;/code&gt; is interesting because the jar/aar file depends on google-play-services.jar and android-support-v4.jar.
Xamarin suggests to add these jar files as ReferenceJar items by setting Build Action to ReferenceJar. What is missing here for a successful compilation is a C# side of these reference jars. After adding the jars you need to add a Nuget packages or Xamarin components with C# bindings for these jars.
With that change,C# bindings generator will generate correct code an generated C# code will be compilable, because you already have C# part of the referenced libraries.&lt;/p&gt;

&lt;p&gt;One of the questions one might have - which version of google-play-services.jar should we use?
&lt;a href=&quot;https://github.com/googlemaps/android-maps-utils/blob/master/library/build.gradle#L19&quot;&gt;The android-maps-utils library is compiled against google-play-services 7.8.0&lt;/a&gt;, so, basically, we can use anything &amp;gt;=7.8.0&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-this-library-examples&quot;&gt;How to use this library (examples)&lt;/h3&gt;

&lt;p&gt;On C# side what you need to do is following:
0) reference the bindings
1) instantiate cluster manager&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//on MapReady&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ClusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOnCameraChangeListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetOnMarkerClickListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you already have custom handlers to map CameraChange/MarkerClick, you can do following (specifics of Xamarin.Android events subscriptions)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map_MarkerClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GoogleMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MarkerClickEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnMarkerClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//your custom code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map_CameraChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GoogleMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CameraChangeEventArgs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnCameraChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//your custom code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2) implement custom IClusterItem object&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServiceClusterItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IClusterItem&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceClusterItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServiceItem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serviceItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LatLng&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serviceItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serviceItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Lon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServiceClusterItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IntPtr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Android&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JniHandleOwnership&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transfer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LatLng&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Position&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3) add items to the clusterer and enjoy&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clusterItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServiceClusterItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_clusterManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clusterItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What if you have another version of Google Play Services already linked to your main project?
In that case fork the repo and remove references that it has currently and then add references to the same packages and versions you have in your main project.&lt;/p&gt;

&lt;h3 id=&quot;helpful-links&quot;&gt;Helpful links&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;My other Xamarin bindings:
&lt;a href=&quot;http://dreamteam-mobile.com/blog/2015/04/tutorial-android-float-label-binding-for-xamarin-android/&quot;&gt;Tutorial – Android float label binding for Xamarin.Android&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;“Maps Shortcuts: Android Maps Utility Library” youtube video
  &lt;a href=&quot;https://www.youtube.com/watch?v=nb2X9IjjZpM&quot;&gt;Maps Shortcuts: Android Maps Utility Library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;example of use for original android maps util library
&lt;a href=&quot;https://github.com/googlemaps/android-maps-utils/tree/master/demo&quot;&gt;github.com/googlemaps/android-maps-utils/tree/master/demo&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;brendanzagaeski Metadata.xml examples:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://gist.github.com/brendanzagaeski/c32d65c21e152799af69&quot;&gt;https://gist.github.com/brendanzagaeski/c32d65c21e152799af69&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/6d1052a8b76f9067548e&quot;&gt;https://gist.github.com/brendanzagaeski/6d1052a8b76f9067548e&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/69f490e31ca6a71136ff&quot;&gt;https://gist.github.com/brendanzagaeski/69f490e31ca6a71136ff&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/3868e30b85a1feb1181b&quot;&gt;https://gist.github.com/brendanzagaeski/3868e30b85a1feb1181b&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/9834034&quot;&gt;https://gist.github.com/brendanzagaeski/9834034&lt;/a&gt;
&lt;a href=&quot;https://gist.github.com/brendanzagaeski/9607158&quot;&gt;https://gist.github.com/brendanzagaeski/9607158&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2015/12/28/android-maps-utils-available-for-xamarin-android-apps-bindings/&amp;amp;text=Android-maps-utils+bindings+for+Xamarin.Android+apps&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>gMaps is again best navigation app for Windows Phone</title>
   <link href="https://sorokoletov.com/2015/11/07/gmaps-is-again-best-travel-app-for-windowsphone/"/>
   <updated>2015-11-07T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2015/11/07/gmaps-is-again-best-travel-app-for-windowsphone</id>
   <content type="html">&lt;p&gt;I recently opened Store app on Lumia 925 and was surprised.&lt;br /&gt;
Turns out, after so many years, gMaps is still the best navigation app out there.&lt;/p&gt;

&lt;p&gt;gMaps is top 1 free navigation application for Windows Phone 8.1! Yay!&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoji&quot; title=&quot;:rocket:&quot; alt=&quot;:rocket:&quot; src=&quot;https://assets.github.com/images/icons/emoji/unicode/1f680.png&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;gMaps Pro (paid version already including all features of gMaps) is top 2 paid navigation application for Windows Phone 8.1&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;Here you are, facts :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gmaps-is-top-free-navigation-app-for-wp.png&quot; alt=&quot;gMaps is top free navigation app for Windows Phone&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gmaps-is-top2-paid-navigation-app-for-wp.png&quot; alt=&quot;gMaps is top2 paid navigation app for Windows Phone&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We put a lot of energy into gMaps and are striving for the quality and features.&lt;/p&gt;

&lt;p&gt;If you have any ideas how to make the app better, or any other feedback, feel free to contact us using &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#103;&amp;#109;&amp;#097;&amp;#112;&amp;#115;&amp;#046;&amp;#102;&amp;#101;&amp;#101;&amp;#100;&amp;#098;&amp;#097;&amp;#099;&amp;#107;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;gmaps feedback email&lt;/a&gt;
 address or &lt;a href=&quot;https://gmaps.uservoice.com/&quot;&gt;gMaps uservoice&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2015/11/07/gmaps-is-again-best-travel-app-for-windowsphone/&amp;amp;text=gMaps+is+again+best+navigation+app+for+Windows+Phone&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Contributing to .NET Core from OS X</title>
   <link href="https://sorokoletov.com/2015/11/05/contributing-to-dotnet-on-mac-osx/"/>
   <updated>2015-11-05T00:00:00-05:00</updated>
   <id>https://sorokoletov.com/2015/11/05/contributing-to-dotnet-on-mac-osx</id>
   <content type="html">&lt;p&gt;Imagine you forgot your Windows laptop and have only old Macbook and you are on .NET hackathon. What do you do there?&lt;/p&gt;

&lt;p&gt;Well, you have number of options. What you probably dont  know &lt;em&gt;yet&lt;/em&gt; is that you can develop using .NET also on your Macbook (or your spouse).&lt;/p&gt;

&lt;p&gt;My choice was to contribute to &lt;a href=&quot;http://dotnet.github.io/core/&quot;&gt;.NET Core&lt;/a&gt; which works on everything (have you read recent announcement from RedHat?)&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;getting-ready-to-rock&quot;&gt;Getting ready to rock&lt;/h2&gt;

&lt;p&gt;Before you can do anything with .NET on your Mac, you will need to do several things:&lt;/p&gt;

&lt;p&gt;1) &lt;a href=&quot;https://code.visualstudio.com/Download?Wt.mc_id=DX_MVP5000197&quot;&gt;Download Visual Studio Code (vscode)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2) Install the .NET Core itself. Here is a good guide to follow: &lt;a href=&quot;http://dotnet.github.io/core/getting-started/&quot;&gt;http://dotnet.github.io/core/getting-started/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3) Next step is to fork &lt;a href=&quot;https://github.com/dotnet/corefx&quot;&gt;dotnet/corefx repository&lt;/a&gt;. In my case it’s &lt;a href=&quot;https://github.com/alexsorokoletov/corefx&quot;&gt;https://github.com/alexsorokoletov/corefx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to get and compile current master of &lt;a href=&quot;https://github.com/dotnet/corefx&quot;&gt;dotnet/corefx repository&lt;/a&gt; you need to have the very latest Mono version installed. Mono website provides CI packages (nightly builds) for Windows and *nix, and provides nothing for OS X. So you have to compile it manually (just once, no worries)&lt;/p&gt;

&lt;h3 id=&quot;compiling-mono-on-os-x&quot;&gt;Compiling Mono on OS X&lt;/h3&gt;
&lt;p&gt;Good article to follow is available on the Mono website &lt;a href=&quot;http://www.mono-project.com/docs/compiling-mono/mac/#building-mono-from-a-git-source-code-checkout&quot;&gt;http://www.mono-project.com/docs/compiling-mono/mac/#building-mono-from-a-git-source-code-checkout&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To make it easy to follow, here is what I did:&lt;/p&gt;

&lt;p&gt;1) clone mono repository&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir monoci

git clone --recursive git@github.com:mono/mono.git

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;monoci/mono&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2) install required tools&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;brew install autoconf automake libtool pkg-config&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3) the compilation itself. In my case folder with mono was &lt;code&gt;~/work/monoci/mono&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;cc -m32&amp;#39;&lt;/span&gt; ./autogen.sh --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;~/work/monoci/mono --disable-nls --build&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;i386-apple-darwin11.2.0
make
make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These lines of code took around hour to execute on my wife’s old macbook.
Take a nap or go to gym.&lt;/p&gt;

&lt;p&gt;4) now, when mono is compiled, make sure you tell your system to use the fresh mono. To do that, just add ahead of the PATH variable your folder with mono&lt;/p&gt;

&lt;p&gt;For example, modify ~/.bash_profile file and add line like that&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/Users/theuser/work/monoci/mono/bin:$PATH&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then just quit and reopen terminal.&lt;/p&gt;

&lt;p&gt;5) try it out by running &lt;code&gt;mono --version&lt;/code&gt; in the terminal&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Marias-MacBook-Pro:tests theuser&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mono --version
Mono JIT compiler version 4.3.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;master/c278ead Thu Nov  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; 11:03:13 PST 2015&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           normal
	SIGSEGV:       altstack
	Notification:  kqueue
	Architecture:  x86
	Disabled:      none
	Misc:          softdebug 
	LLVM:          supported, not enabled.
	GC:            sgen&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;6) last thing is to copy PCL reference libraries.
&lt;a href=&quot;https://www.dropbox.com/s/6eg6diva5j33vus/mono-pcl-bits.tgz?dl=0&quot;&gt;Get it here 9.8mb&lt;/a&gt; and unzip to folder &lt;code&gt;~/work/monoci/mono/lib/mono/xbuild-frameworks&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After doing that you should see two subfolders there:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Marias-MacBook-Pro:xbuild-frameworks theuser&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -la ~/work/monoci/mono/lib/mono/xbuild-frameworks
total 0
drwxr-xr-x   &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; theuser  staff  &lt;span class=&quot;m&quot;&gt;136&lt;/span&gt; Nov  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; 11:53 .
drwxr-xr-x  &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; theuser  staff  &lt;span class=&quot;m&quot;&gt;408&lt;/span&gt; Nov  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; 11:24 ..
drwxr-xr-x   &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; theuser  staff  &lt;span class=&quot;m&quot;&gt;306&lt;/span&gt; Nov  &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; 11:24 .NETFramework
drwxr-xr-x   &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; theuser  staff  &lt;span class=&quot;m&quot;&gt;204&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt; 01:35 .NETPortable&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;compiling-net-core-on-os-x&quot;&gt;Compiling .NET Core on OS X&lt;/h3&gt;

&lt;p&gt;1) clone your fork of corefx&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone --recursive https://github.com/alexsorokoletov/corefx.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;corefx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2) run the build script (yay!)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./build.sh /p:SkipTests&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The parameter is telling build script to skip tests for now, let’s first make sure the code compiles. Also, this part will take around 30 minutes to compile.&lt;/p&gt;

&lt;p&gt;The build process first gets some Nuget packages, then spins number of parallel compiler processes.
On my machine it failed at some point to spin new processes. To overcome that, I had to run this command in the terminal &lt;code&gt;ulimit -n 2048&lt;/code&gt; to make sure system can spin more procesess - my limit was 256.&lt;/p&gt;

&lt;p&gt;So if you have the same problem, just do the magic and restart the build. Probably, the build.sh should handle that process limit better&lt;/p&gt;

&lt;p&gt;Great stuff is that build is incremental so it will start where it failed and will save time for all of us :)&lt;/p&gt;

&lt;p&gt;3) Assuming you waited enough and things compile (if not, contact me and I will help), you’re all set.&lt;/p&gt;

&lt;h3 id=&quot;before-we-change-anything-in-the-net-core&quot;&gt;Before we change anything in the .NET Core&lt;/h3&gt;

&lt;p&gt;So in order to contribute there are several things you need to keep in mind.&lt;/p&gt;

&lt;p&gt;One, there is a legal side of any contribution. Read on that here, I’m not a lawyer.&lt;/p&gt;

&lt;p&gt;Two, there is a contribution guide you should be familiar with.&lt;/p&gt;

&lt;p&gt;Three, the flow is simple - find task -&amp;gt; create branch -&amp;gt; do change -&amp;gt; run tests -&amp;gt; commit &amp;amp; push changes -&amp;gt; create pull request.&lt;/p&gt;

&lt;p&gt;I will be covering the flow, you need to read legal stuff and contribution guide.&lt;/p&gt;

&lt;h3 id=&quot;changing-net-core&quot;&gt;Changing .NET Core&lt;/h3&gt;

&lt;p&gt;For my first contribution I decided to find something easy and Stephen Toub was very kind and suggested to look at this issue:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dotnet/corefx/issues/2699&quot;&gt;Code cleanup for System.IO.Packaging #2699&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nothing fancy and a good way to learn.&lt;/p&gt;

&lt;p&gt;1) Let’s create a branch for changes&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git branch fix2699
git checkout fix2699&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2) Open VS Code and change something.&lt;/p&gt;

&lt;p&gt;3) Let’s compile and run tests&lt;/p&gt;

&lt;p&gt;To make life easier, it’s good to create an alias to the msbuild run by mono, so let’s do that.
Edit ~/.bash_profile and add a line like that&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mbuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mono ~/work/corefx/packages/Microsoft.Build.Mono.Debug.14.1.0.0-prerelease/lib/MSBuild.exe&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;.NET Core picks up the msbuild.exe from the Nuget package, so the exact package version could be different. 
If it is, look it up in the &lt;code&gt;build.sh&lt;/code&gt; file around line 190&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;__msbuildpackageid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Build.Mono.Debug&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;__msbuildpackageversion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;14.1.0.0-prerelease&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Restart the terminal (or do &lt;code&gt;source ~/.bash_profile&lt;/code&gt;) and let’s go into the folder of the exact package you’re touching.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src/System.IO.Packaging/tests/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then run&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mbuild /t:rebuildandtest /p:OSGroup&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OSX&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This code will compile whatever it sees (either whole .NET Core or just a package). If the changes are local to the package, there is no reason to recompile whole framework.&lt;/p&gt;

&lt;p&gt;You should see:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;xUnit.net console &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;runner &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;64-bit .NET Core&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt; Outercurve Foundation.
  
  Discovering: System.IO.Packaging.Tests
  Discovered:  System.IO.Packaging.Tests
  Starting:    System.IO.Packaging.Tests
  Finished:    System.IO.Packaging.Tests
  
  &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; TEST EXECUTION &lt;span class=&quot;nv&quot;&gt;SUMMARY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;
     System.IO.Packaging.Tests  Total: 122, Errors: 0, Failed: 0, Skipped: 0, Time: 2.080s
  Touching &lt;span class=&quot;s2&quot;&gt;&amp;quot;/Users/theuser/work/corefx/bin/tests/OSX.AnyCPU.Debug/System.IO.Packaging.Tests/dnxcore50/tests.passed.without.OuterLoop.failing&amp;quot;&lt;/span&gt;.
Done Building Project &lt;span class=&quot;s2&quot;&gt;&amp;quot;/Users/theuser/work/corefx/src/System.IO.Packaging/tests/System.IO.Packaging.Tests.csproj&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rebuildandtest target&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;.

Build succeeded.
    &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; Warning&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; Error&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Time Elapsed 00:00:22.61&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nice, everything works!&lt;/p&gt;

&lt;p&gt;4) Commiting the change. 
As the contributing guide suggest, you commit message should look like&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Code cleanup in System.IO.Packaging

This request has several changes in ContentType.cs to make sure I understand the contribution workflow

Related to &lt;span class=&quot;c&quot;&gt;#2699&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The empty lines are required because of the way github handles commits and pull requests.
As my commit doesn’t really fixes anything, I wrote in the last line “Related to #issue_number” and not “Fixed #issue_number”.&lt;/p&gt;

&lt;p&gt;After you commit, push the changes to the github and create a pull request.&lt;/p&gt;

&lt;p&gt;Github will pickup the pull request contents automatically.&lt;/p&gt;

&lt;p&gt;Time to wait till .NET Core automatic build compiles your changes and also till .NET team provides feedback on the changes.&lt;/p&gt;

&lt;p&gt;5) Common thing is that you get feedback on pull request and need to do some minor changes.
After you do the changes, you might want to create a new commit, but there is a better way.&lt;/p&gt;

&lt;p&gt;You can update your previous commit, by ammending the previous commit and force-pushing it to the server.&lt;/p&gt;

&lt;p&gt;Easy in the terminal:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git commit --amend
git push origin +fix2699&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thanks for this tip, Stephen!&lt;/p&gt;

&lt;p&gt;6) Then your pull request is accepted and merged. 
Congratulations!&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;Things I just did were impossible all 12 years .NET existed before.&lt;/p&gt;

&lt;p&gt;It is a still mind-blowing how .NET Core, build and tests work on anything running OS X, Linux and Windows.&lt;/p&gt;

&lt;p&gt;What is great is that you can already write apps using .NET and C# for OS X (console and web apps so far).&lt;/p&gt;

&lt;p&gt;What is incredibly great is that how easy is to contribute to the .NET now.&lt;/p&gt;

&lt;p&gt;First time it might be hard, submitting first pull request took me 4 hours. Submitting second took me 30 minutes.&lt;/p&gt;

&lt;p&gt;Huge thanks and kudos to the .NET Core team, Mat, Stephen and everyone else helping me!&lt;/p&gt;

&lt;p&gt;I hope this experience will be helpful to other people having spare time and experience to share and reuse.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=https://sorokoletov.com/2015/11/05/contributing-to-dotnet-on-mac-osx/&amp;amp;text=Contributing+to+.NET+Core+from+OS+X&amp;amp;via=alexsorokoletov&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/alexsorokoletov&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;
</content>
 </entry>
 

</feed>
